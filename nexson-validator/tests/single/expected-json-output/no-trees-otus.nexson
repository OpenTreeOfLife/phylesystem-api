{
"$": "Open Tree NexSON validation", 
"@property": "ot:annotation", 
"@xsi:type": "nex:ResourceMeta", 
"author": {
"description": "validator of NexSON constraints as well as constraints that would allow a study to be imported into the Open Tree of Life's phylogenetic synthesis tools", 
"invocation": {
"checksPerformed": [
"MISSING_MANDATORY_KEY", 
"MISSING_OPTIONAL_KEY", 
"UNRECOGNIZED_KEY", 
"MISSING_LIST_EXPECTED", 
"DUPLICATING_SINGLETON_KEY", 
"REFERENCED_ID_NOT_FOUND", 
"REPEATED_ID", 
"MULTIPLE_ROOT_NODES", 
"NO_ROOT_NODE", 
"MULTIPLE_EDGES_FOR_NODES", 
"CYCLE_DETECTED", 
"DISCONNECTED_GRAPH_DETECTED", 
"INCORRECT_ROOT_NODE_LABEL", 
"TIP_WITHOUT_OTU", 
"TIP_WITHOUT_OTT_ID", 
"MULTIPLE_TIPS_MAPPED_TO_OTT_ID", 
"NON_MONOPHYLETIC_TIPS_MAPPED_TO_OTT_ID", 
"INVALID_PROPERTY_VALUE", 
"PROPERTY_VALUE_NOT_USEFUL", 
"UNRECOGNIZED_PROPERTY_VALUE", 
"MULTIPLE_TREES", 
"UNRECOGNIZED_TAG", 
"CONFLICTING_PROPERTY_VALUES", 
"NO_TREES"
], 
"commandLine": [
"--validate"
], 
}, 
"name": "normalize_ot_nexson.py", 
"url": "https://github.com/OpenTreeOfLife/api.opentreeoflife.org", 
}, 
"isValid": false, 
"messages": [
{
"code": "MISSING_MANDATORY_KEY", 
"comment": "Missing required key \"@otus\" in \"trees(id=trees2)\"\n", 
"data": "@otus", 
"preserve": false, 
"refersTo": {
"inMeta": false, 
"top": "trees", 
"treesID": "trees2"
}, 
"severity": "ERROR"
}, 
{
"code": "REFERENCED_ID_NOT_FOUND", 
"comment": "An ID Reference did not match a previous ID (\"@otu\": \"otu1\") in \"node(id=node2)\"\n", 
"data": {
"key": "@otu", 
"value": "otu1"
}, 
"preserve": false, 
"refersTo": {
"inMeta": false, 
"nodeID": "node2", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "ERROR"
}, 
{
"code": "REFERENCED_ID_NOT_FOUND", 
"comment": "An ID Reference did not match a previous ID (\"@otu\": \"otu2\") in \"node(id=node3)\"\n", 
"data": {
"key": "@otu", 
"value": "otu2"
}, 
"preserve": false, 
"refersTo": {
"inMeta": false, 
"nodeID": "node3", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "ERROR"
}, 
{
"code": "REFERENCED_ID_NOT_FOUND", 
"comment": "An ID Reference did not match a previous ID (\"@otu\": \"otu3\") in \"node(id=node4)\"\n", 
"data": {
"key": "@otu", 
"value": "otu3"
}, 
"preserve": false, 
"refersTo": {
"inMeta": false, 
"nodeID": "node4", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "ERROR"
}, 
{
"code": "TIP_WITHOUT_OTU", 
"comment": "Tip node (\"node2\") without a valid @otu value in \"node(id=node2)\"\n", 
"data": null, 
"preserve": false, 
"refersTo": {
"inMeta": false, 
"nodeID": "node2", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "ERROR"
}, 
{
"code": "TIP_WITHOUT_OTU", 
"comment": "Tip node (\"node3\") without a valid @otu value in \"node(id=node3)\"\n", 
"data": null, 
"preserve": false, 
"refersTo": {
"inMeta": false, 
"nodeID": "node3", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "ERROR"
}, 
{
"code": "TIP_WITHOUT_OTU", 
"comment": "Tip node (\"node4\") without a valid @otu value in \"node(id=node4)\"\n", 
"data": null, 
"preserve": false, 
"refersTo": {
"inMeta": false, 
"nodeID": "node4", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "ERROR"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:focalClade\" in \"meta\" in \"nexml(id=None)\"\n", 
"data": "@property=ot:focalClade", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"property": "ot:focalClade", 
"top": "meta"
}, 
"severity": "WARNING"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:studyPublication\" in \"meta\" in \"nexml(id=None)\"\n", 
"data": "@property=ot:studyPublication", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"property": "ot:studyPublication", 
"top": "meta"
}, 
"severity": "WARNING"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:studyYear\" in \"meta\" in \"nexml(id=None)\"\n", 
"data": "@property=ot:studyYear", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"property": "ot:studyYear", 
"top": "meta"
}, 
"severity": "WARNING"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:curatorName\" in \"meta\" in \"nexml(id=None)\"\n", 
"data": "@property=ot:curatorName", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"property": "ot:curatorName", 
"top": "meta"
}, 
"severity": "WARNING"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:dataDeposit\" in \"meta\" in \"nexml(id=None)\"\n", 
"data": "@property=ot:dataDeposit", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"property": "ot:dataDeposit", 
"top": "meta"
}, 
"severity": "WARNING"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:studyPublicationReference\" in \"meta\" in \"nexml(id=None)\"\n", 
"data": "@property=ot:studyPublicationReference", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"property": "ot:studyPublicationReference", 
"top": "meta"
}, 
"severity": "WARNING"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:isLeaf\" in \"meta\" in \"node(id=node2)\"\n", 
"data": "@property=ot:isLeaf", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"nodeID": "node2", 
"property": "ot:isLeaf", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "WARNING"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:isLeaf\" in \"meta\" in \"node(id=node3)\"\n", 
"data": "@property=ot:isLeaf", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"nodeID": "node3", 
"property": "ot:isLeaf", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "WARNING"
}, 
{
"code": "MISSING_OPTIONAL_KEY", 
"comment": "Missing optional key \"@property=ot:isLeaf\" in \"meta\" in \"node(id=node4)\"\n", 
"data": "@property=ot:isLeaf", 
"preserve": false, 
"refersTo": {
"inMeta": true, 
"nodeID": "node4", 
"property": "ot:isLeaf", 
"top": "trees", 
"treeID": "tree1", 
"treesID": "trees2"
}, 
"severity": "WARNING"
}
]
}